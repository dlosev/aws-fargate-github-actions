name: PR deploy

on:
  pull_request:
    types: [labeled]
  push:
    branches-ignore:
      - release
#      - master

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: app
  IMAGE_TAG: latest

jobs:
  deploy-aws:
#    if: |
#      (github.event.action == 'labeled' && github.event.label.name == 'deploy') ||
#      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'deploy'))

    runs-on: ubuntu-latest

    steps:
      - name: inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: set STAGE variable in environment for next steps
        run: echo "STAGE=pr-${{ github.event.number }}-${{ env.GITHUB_HEAD_REF_SLUG }}" >> $GITHUB_ENV

      - name: checkout the files
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: create a github deployment
        uses: bobheadxi/deployments@v0.5.2
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.STAGE }}
          ref: ${{ github.head_ref }}
          no_override: false
          transient: true

      - name: cdk bootstrap
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'bootstrap'
          cdk_stack: "aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}"
          working_dir: './cdk'

      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          cdk_stack: "aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ env.AWS_REGION }}"
          cdk_args: '--require-approval never'
          working_dir: './cdk'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

      - name: update the github deployment status
        uses: bobheadxi/deployments@v0.5.2
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.pr_deploy.outputs.env_url }}
